<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaWFxcXKRbW1uRXFxcVlxcXCRdXV0sW1tbTFtb
        W2taWlpxXV1dNAAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dQltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/1dXV00AAAAAAAAAAAAAAAAAAAAAFxcXGRbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/XFxcYQAAAAAAAAAAAAAAAAAAAABVVVUSW1tb1FtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v6W1tbml1dXQsAAAAAAAAAAAAAAABZWVlNWlpaZl1dXRZbW1vEW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1vWXFxcJFxcXEVbW1twVVVVFQAAAABbW1trW1tb/1tbW/9cXFyLVVVVDFpa
        WstbW1v/W1tb/1tbW/9bW1v0W1tbKllZWT9bW1v+W1tb/1tbW95dXV0WW1tb31tbW/9bW1v/W1tb8WZm
        ZgVVVVUVW1tb11tbW/9bW1v9XFxcWQAAAABbW1tzW1tb/1tbW/9bW1v/W1tblVtbW/FbW1v/W1tb/1tb
        W/9eXl4eAAAAAGZmZgpcXFxOWVlZLgAAAAAAAAAAWlpaM1tbW/9bW1v/W1tb/1tbW+FbW1u0W1tb/1tb
        W/9bW1v3VVVVCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1u7W1tb/1tbW/9bW1voXV1dLFtb
        W+xbW1v+WlpadF1dXSFbW1uiW1tbcAAAAAEAAAAAW1tbrVtbW/xbW1uKWFhYGltbW9dbW1v/W1tblQAA
        AABiYmINXV1dIVVVVQNbW1vSW1tb/1tbW/9aWlpEXFxcSFtbW/9bW1v/W1tb/1xcXFBmZmYFWlpaMFVV
        VQMAAAAAAAAAAAAAAABcXFxLW1tb/1tbW/9bW1v/XFxci1xcXI5bW1v/W1tb/1tbW/9bW1ulAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXFxccltbW/9bW1v/W1tb/1tbW6NbW1umW1tb/1tbW/9bW1v/XFxcwwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW0xbW1v/W1tb/1tbW/9bW1uRW1tbe1tbW/9bW1v/W1tb/1tb
        W6YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUDW1tbwVtbW/9bW1v1W1tbLVVVVRJbW1vWW1tb/1tb
        W/NaWlozAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAElJSQdcXFxFV1dXIwAAAAAAAAAAXV1dC1xc
        XEhYWFggAAAAAAAAAAAAAAAAAAAAAPP/AADgBwAA4AcAAOAHAADwHwAAiDEAAAxwAAAP8AAAD/AAAJuI
        AADxjwAA8AcAAPAHAADwhwAA8Y8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVRJaWlpPXFxcU1lZWTxVVVUVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1ttW1tb9VtbW/9bW1v/W1tb/1tb
        W/1bW1vKXFxciFxcXFNdXV03XFxcOlxcXFBbW1t4W1tboltbW81bW1vlW1tb7ltbW9dbW1uxWlpaPgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaR1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v7WlpaPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1u2W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9cXFyyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtb
        W9ZbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1paWtkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAW1tbtltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABbW1tJW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW+VcXFwnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1t5W1tb/ltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/JcXFyOXl5eEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1tUW1tb9ltbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/5cXFyLWlpaEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgAJaWlp8W1tb7FtbW/laWlqsWVlZFAAAAABbW1s7W1tb7Ftb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbYgAAAAAAAAAAWlpaVVtb
        W99bW1v/W1tb3lxcXFMAAAAAAAAAAAAAAAAAAAAAXFxclltbW/9bW1v/W1tb/1tbW/9cXFzRSUlJBwAA
        AABaWlozW1tb81tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW5oAAAAAAAAAAFxc
        XE5bW1v+W1tb/1tbW/9bW1v/W1tb/1tbW4EAAAAAAAAAAFxcXDJbW1v+W1tb/1tbW/9bW1v/W1tb/1tb
        W/9aWlpxAAAAAAAAAABcXFxIW1tb+1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vYZmZmCgAA
        AAAAAAAAXFxcwFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/lpaWlUAAAAAW1tbpVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW9QAAAAAAAAAAAAAAABbW1toW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb91tb
        WzgAAAAAAAAAAAAAAABbW1vtW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb5WBgYAhbW1vdW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1VVVRIAAAAAAAAAAAAAAABbW1toW1tb+VtbW/9bW1v/W1tb/1tb
        W/RcXFxQAAAAAAAAAAAAAAAAAAAAAFtbW+JbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbalpa
        WvhbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WFhYMQAAAAAAAAAAAAAAAAAAAABaWloiW1tbg1tb
        W6hbW1uSV1dXIwAAAAAAAAAAAAAAAAAAAAAAAAAAWlparFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1vCW1tb4FtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlpKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlpKW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW+9bW1uiW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/11dXTQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFbW1vFW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb9VlZWT9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1veVVVVAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dCwAAAAAAAAAAAAAAAFlZ
        WStbW1v5W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vTAAAAAFtbW6tbW1v/W1tb/1tbW/9bW1v/W1tb/1pa
        WlUAAAAAAAAAAFpaWjBaWlpjW1tbQwAAAAAAAAAAAAAAAAAAAAAAAAAAXl5eJltbW8RbW1v+W1tb71tb
        W4xgYGAIAAAAAFxcXGdbW1v+W1tb/1tbW/9bW1v/W1tb/1tbW4MAAAAAW1tbDltbW8FbW1v/W1tb/1tb
        W/1aWlp/AAAAAAAAAAFbW1uUW1tb/1tbW/9bW1v/W1tbpkBAQAQAAAAAAAAAAF1dXQtbW1vbW1tb/1tb
        W/9bW1v/W1tb/1tbW7tAQEAEAAAAAFxcXGdaWlr4W1tb/1tbW/9bW1vUYmJiDQAAAAAAAAAAVVVVA1pa
        WlJcXFxyWVlZKwAAAAAAAAAAXFxcb1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbaAAAAAAAAAAAWlpabltb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1paWnEAAAAAAAAAAFhYWCBcXFxsXFxcZ2ZmZgoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQxbW1vwW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vNAAAAAAAA
        AABbW1vBW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb5VVVVQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcbFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9gYGAQZmZmClpaWvhbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/XFxcPQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlq6W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1lZWTlbW1s4W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlpxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW+NbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tbTFpaWk9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1pa
        Wo0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tb4ltb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1tXW1tbVFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbkgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1u+W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXEhbW1sqW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1t4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxcXIBbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v6WVlZFAAAAABbW1vQW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1lZWTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWVlZF1tbW+9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXJkAAAAAAAAAAFpa
        WkpbW1v+W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbRltbW/RbW1v/W1tb/1tbW/9cXFzcYGBgGAAA
        AAAAAAAAAAAAAFpaWm5bW1v7W1tb/1tbW/9bW1v/W1tb4FhYWCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcJFpaWoVbW1uoW1tbiVVV
        VRIAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWStbW1uKW1tbqVtbW4deXl4TAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////+A+B//AAAP/gAAB/4AAAf+AAAH/wAAD/+AAB//wAB/+OA
        B4+BwAcDgeAOAwDwHgEA+D4BAPx+AAD//wAA//8AgP//gIH/4cDDg8Dh/4PA//8BgH//AYB//gGAf/4B
        gD/+AYA//gGAf/4BgH//AcB//4Pg///H8f//////
</value>
  </data>
</root>