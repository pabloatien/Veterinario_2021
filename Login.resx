<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUGXFxcPVpaWlVaWlpVXFxcPVVV
        VQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbzFtbW/9bW1v/W1tb/1tb
        W/9bW1vQAAAAAAAAAAAAAAAAAAAAAAAAAABeXl4TW1tbVFpaWmZcXFxhW1tbLVtbW9pbW1v/W1tb/1tb
        W/9bW1v/W1tb3VtbWypcXFxhWlpaZltbW1ReXl4TW1tb9VtbW/9bW1v/W1tb/1tbW7BcXFyqW1tb/1tb
        W/9bW1v/W1tb/1tbW6tbW1uiW1tb/1tbW/9bW1v/W1tb9FtbW/lbW1v/W1tb/1tbW/9bW1v2W1tbUVtb
        W+JbW1v/W1tb/1tbW+JaWlpSW1tb9ltbW/9bW1v/W1tb/1paWvhbW1vFW1tb/1tbW/9bW1v/W1tb/1tb
        W4FaWloRW1tbeFtbW3lVVVUSWlpagltbW/9bW1v/W1tb/1tbW/9bW1vCWVlZLltbW+ZbW1v/W1tb/1pa
        WsteXl4eWlpadFtbW/5bW1v+Wlpad15eXhtbW1vMW1tb/1tbW/9bW1vkXV1dLAAAAABVVVUSW1tbg1pa
        WmZbW1s7W1tbdltbW9tbW1v/W1tb/1tbW95bW1tzXFxcPVtbW2VbW1uDVVVVEgAAAAAAAAAAW1tboFtb
        W/9bW1v+W1tba1paWnxaWlqsW1tb/1tbW/9aWlqvXFxcfVxcXGlbW1v+W1tb/1tbW6IAAAAAAAAAAVtb
        W/lbW1v/W1tb/1tbW8FbW1uXWlpaWFxcXHVbW1t2W1tbXFxcXJxbW1u+W1tb/1tbW/9bW1v7VVVVAwAA
        AABbW1vCW1tb/1tbW/9bW1uHW1tbx1tbW/9aWlpjWlpadFtbW/9bW1vMWlpahVtbW/9bW1v/W1tbxAAA
        AAAAAAAAVVVVD1tbW2tbW1tcXV1dN1tbW8dbW1uDVVVVA2BgYAhaWlqNW1tbxl5eXjZaWlpbXFxcbFVV
        VQ8AAAAAAAAAAAAAAAAAAAAAAAAAAFtbW3NbW1vGWlpaWwAAAAAAAAAAW1tbaFtbW8ZaWlpmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYBhbW1v+W1tb/1tbW/SAgIACVVVVDFtbW/xbW1v/W1tb+2Zm
        ZgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGAIW1tb41tbW/9bW1vKAAAAAICAgAJbW1vaW1tb/1tb
        W9cAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWRdaWlpPVVVVDwAAAAAAAAAAXl5eE1pa
        Wk9VVVUSAAAAAAAAAAAAAAAAAAAAAP//AAD4HwAA+B8AAAAAAAAEIAAAA8AAAIZhAADcOwAAjDEAAIPB
        AACBgQAA+Z8AAPvfAADxjwAA8Y8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5e
        XhtaWlpdWlpajVxcXKRbW1u4W1tbuFtbW6VcXFyOXFxcXlhYWB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABcXFx6W1tb+1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/FxcXIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFpaWr1bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbxgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWlpavVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1vGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQlcXFxTW1tbjFtb
        W7dbW1vMW1tb3VtbW9dbW1vFWlpar1VVVQZbW1uzW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW7uAgIACW1tbsVtbW9ZbW1vdW1tb3VtbW8xbW1u2W1tbjFxcXFNVVVUJW1tb11tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/Xl5eJlxcXItbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tbkVhYWCBbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W9dbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9cXFxvXV1dNFtbW/5bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9cXFw6W1tbaltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW9pJSUkHW1tbl1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/XFxcnFVVVQZbW1vXW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb8ltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W4xVVVUGXFxcpFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW6hJSUkHW1tbiltbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/BbW1vEW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbWzUAAAAAXFxcSFtbW6hbW1vMW1tbzFxcXKpaWlpKAAAAAFtbWzVbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbwVxcXGRbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1veZmZmBQAAAAAAAAAAWlpaJVxcXHJbW1tzXFxcJwAAAAAAAAAASUlJB1tb
        W+FbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9cXFxhVVVVA1tbW7tbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/FtbW0YAAAAAAAAAAFtbW3ZbW1v5W1tb/1tbW/9bW1v6WlpafAAA
        AAAAAAAAWVlZP1paWvhbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbuYCAgAIAAAAAW1tbDltb
        W7NbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/BcXFxTWVlZFF5eXh5cXFxLW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbUVVVVRVVVVUVWlpaT1tbW/FbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW7FiYmINAAAAAAAA
        AAAAAAAAAAAAAFpaWkRbW1uXXFxcqltbW6VaWlppXl5eE1xcXCRbW1vIQEBABFxcXLVbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1u7gICAAltbW8hdXV0pXl5eE1paWmlbW1ulXFxcqlxcXJZdXV1CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZmZmBVpaWmlcXFyZXFxcjl1dXTQAAAAAW1tbrVtbW+sAAAAAW1tbzFtb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW9IAAAAAW1tb41tbW7EAAAAAWFhYMVpaWo1cXFyZXFxcbFVV
        VQYAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQ9bW1vKW1tb/1tbW/9bW1v/W1tb+1tbW2pVVVUMW1tb3Vtb
        Ww5bW1ufW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/XFxcpF1dXQtbW1veW1tbDlxcXGRbW1v6W1tb/1tb
        W/9bW1v/XFxczlVVVRIAAAAAAAAAAAAAAAAAAAAAXFxcnFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb+ltb
        Wy1aWlpuW1tbYlpaWh9bW1vxW1tb/1tbW/9bW1v/W1tb/1tbW/RXV1cjXFxcXlpaWnRdXV0pWlpa+Ftb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tbowAAAAAAAAAAAAAAAFVVVQNbW1v3W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/WlpahVxcXC9bW1vnXFxcGVxcXDJbW1vVW1tb/1tbW/9bW1vYWlpaNl5eXhtbW1vlWlpaNlpa
        Wn9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v5SUlJBwAAAAAAAAAAYGBgCFtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uUXl5eJltbW/9cXFzcWVlZPwAAAABeXl4eXl5eHgAAAABZWVk5W1tb2ltb
        W/9dXV0sW1tbjFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9VVVUPAAAAAAAAAAAAAAAAW1tbz1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW1pcXFxQW1tb/1tbW/9bW1v/W1tbylVVVQxeXl4eW1tbxFtb
        W/9bW1v/W1tb/1tbW1RbW1tUW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb1QAAAAAAAAAAAAAAAAAA
        AABbW1s7W1tb+1tbW/9bW1v/W1tb/1tbW/9cXFzAgICAAlxcXLVbW1v/W1tb/1tbW/9bW1upAAAAAAAA
        AAFbW1vKW1tb/1tbW/9bW1v/W1tbuAAAAAFaWlq6W1tb/1tbW/9bW1v/W1tb/1tbW/xcXFxAAAAAAAAA
        AAAAAAAAAAAAAAAAAABdXV00W1tbxVtbW/9bW1vxW1tbiVVVVQlbW1tfW1tb/1tbW/9bW1v/W1tbx1tb
        Ww4AAAAAAAAAAFtbWxxbW1vaW1tb/1tbW/9bW1v/W1tbaGBgYAhaWlqFW1tb8FtbW/9bW1vIW1tbOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAltbW21cXFykXFxcllpa
        WlWAgIACAAAAAAAAAAAAAAAAAAAAAFVVVQZaWlpjWlpam1tbW6JcXFxhAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbUVxc
        XJxaWlqQWlpaMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW0NbW1uXXFxcllxcXEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxc
        XIhbW1v/W1tb/1tbW/9bW1v7WVlZTQAAAAAAAAAAAAAAAAAAAABcXFxsW1tb/ltbW/9bW1v/W1tb/lxc
        XGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABeXl4bW1tb/FtbW/9bW1v/W1tb/1tbW/9bW1vYAAAAAAAAAAAAAAAASUlJB1tbW/RbW1v/W1tb/1tb
        W/9bW1v/W1tb8EBAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxcXEVbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/5JSUkHAAAAAAAAAABdXV0pW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/V1dXIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWlpaH1tbW/5bW1v/W1tb/1tbW/9bW1v/XFxc3AAAAAAAAAAAAAAAAGBg
        YAhbW1v3W1tb/1tbW/9bW1v/W1tb/1tbW/RmZmYFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpajVtbW/9bW1v/W1tb/1tbW/xcXFxQAAAAAAAA
        AAAAAAAAAAAAAFtbW3BbW1v/W1tb/1tbW/9bW1v/W1tbagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcXlpaWqFcXFyZWVlZPAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWk9aWlqeW1tbnVtbW0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////+B///+AD///AA///wAP/wEACAwBAAgAAYAYAACAEAAAQ
        CAAAHDgAgB/4AYA8PAHAeB4D8dALj/mQCZ/g0AsHwHgeA8AsNgPAJ+QDwGGGA+BBggfww8MP/8/z///P
        8///B+H//wPA//8DwP//A8D//wfh///P8///////
</value>
  </data>
</root>